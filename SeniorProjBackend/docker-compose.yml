version: '3.4'

services:
  seniorprojbackend:
    image: ${DOCKER_REGISTRY-}seniorprojbackend
    build:
      context: Backend_Files
      dockerfile: Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - app-network

  frontend:
    build:
      context: ../RealBubbyFrontend/real_cool_frontend
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=development
    volumes:
      - ../RealBubbyFrontend/real_cool_frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    command: pnpm run dev
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ../RealBubbyFrontend/real_cool_frontend/certs:/etc/nginx/certs:ro
    depends_on:
      - seniorprojbackend
      - frontend
    networks:
      - app-network

  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Password123!!
      POSTGRES_DB: CodeCoach
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - app-network


networks:
  app-network:
    driver: bridge

volumes:
  postgres_data: